<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.pfc</groupId>
  <artifactId>pfc</artifactId>
  <version>1.0.0</version>
  <packaging>pom</packaging>

  <name>pfc</name>
  <url>http://maven.apache.org</url>
  
  <modules>
	<module>pfc-business</module>
	<module>pfc-webapp</module>
    <module>pfc-snmp</module>
  </modules>

  <properties>
    	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    
    	<!--  Data source properties -->
        <dataSource.user>postgres</dataSource.user>
        <dataSource.password>postgres</dataSource.password>
        <dataSource.jndiName>jdbc/pfc_db</dataSource.jndiName>
        <testDataSource.user>${dataSource.user}</testDataSource.user>
        <testDataSource.password>${dataSource.password}</testDataSource.password>

        <!-- Hibernate properties -->
        <hibernate.show_sql>true</hibernate.show_sql>
        <hibernate.format_sql>true</hibernate.format_sql>
        <hibernate.use_sql_comments>true</hibernate.use_sql_comments>
        
  </properties>
  
      <!-- ========================================================== -->
    <!-- Profiles -->
    <profiles>
        <profile>
            <id>postgresql</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- JDBC driver properties -->
                <jdbcDriver.groupId>postgresql</jdbcDriver.groupId>
                <jdbcDriver.artifactId>postgresql</jdbcDriver.artifactId>
                <jdbcDriver.version>8.4-701.jdbc3</jdbcDriver.version>
                <jdbcDriver.className>org.postgresql.Driver</jdbcDriver.className>

                <!--  Data source properties -->
                <dataSource.url>jdbc:postgresql://localhost/pfc_db</dataSource.url>
                <testDataSource.url>${dataSource.url}</testDataSource.url>

                <!-- Hibernate properties -->
                <hibernate.dialect>org.hibernatespatial.postgis.PostgisDialect</hibernate.dialect>
            </properties>
        </profile>
    </profiles>
    
 <!-- ========================================================== -->
    <!-- Dependency management -->
    <dependencyManagement>
        <dependencies>
            <!-- JDBC driver -->
            <dependency>
                <groupId>${jdbcDriver.groupId}</groupId>
                <artifactId>${jdbcDriver.artifactId}</artifactId>
                <version>${jdbcDriver.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Hibernate -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate</artifactId>
                <version>3.2.7.ga</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-annotations</artifactId>
                <version>3.3.1.GA</version>
            </dependency>
            <!-- JUnit -->
            <!--
                IMPORTANT: Spring TestContext 2.5.x is not compatible
                with JUnit 4.5+.
            -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.4</version>
                <scope>test</scope>
            </dependency>
            <!-- Spring -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring</artifactId>
                <version>2.5.6</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>2.5.6</version>
            </dependency>
			<!-- BeanShell (required by ZK)-->
			<dependency>
		        <groupId>org.beanshell</groupId>
                <artifactId>bsh</artifactId>
                <version>2.0b4</version>
           <!--      <scope>runtime</scope> -->
    	    </dependency>
            <!--  ZKoss  -->
            <dependency>
      			<groupId>org.zkoss.zk</groupId>
     			<artifactId>zk</artifactId>
      			<version>5.0.6</version>
    		</dependency>
   			<dependency>
      			<groupId>org.zkoss.zk</groupId>
      			<artifactId>zkplus</artifactId>
      			<version>5.0.6</version>
    		</dependency>
    		<dependency>
      			<groupId>org.zkoss.zk</groupId>
      			<artifactId>zul</artifactId>
      			<version>5.0.6</version>
    		</dependency>
   			<dependency>
      			<groupId>org.zkoss.common</groupId>
      			<artifactId>zcommon</artifactId>
      			<version>5.0.6</version>
    		</dependency>  
  			<dependency>
      			<groupId>org.zkoss.common</groupId>
      			<artifactId>zweb</artifactId>
      			<version>5.0.6</version>
    		</dependency> 
 
    		<dependency>
    	  		<groupId>org.pfc</groupId>
      			<artifactId>pfc-business</artifactId>
      			<version>1.0.0</version>
   			</dependency>
   			<dependency>
     	 		<groupId>org.pfc</groupId>
      			<artifactId>pfc-snmp</artifactId>
      			<version>1.0.0</version>
   			</dependency>
   
   			<!-- Servlet API -->
  		 	<dependency>
   				<groupId>javax.servlet</groupId>
        		<artifactId>servlet-api</artifactId>
        		<version>2.3</version>
        		<scope>provided</scope>
 			</dependency>
            
    		<!-- Hibernate Spatial for postgis. This will include Hibernate Spatial Core and JTS -->
    		<dependency>
      			<groupId>org.hibernatespatial</groupId>
       			<artifactId>hibernate-spatial-postgis</artifactId>
     			<version>1.0</version>
    		</dependency>

    		<!-- the Postgis JDBC driver -->
    		<dependency>
        		<groupId>org.postgis</groupId>
    			<artifactId>postgis-jdbc</artifactId>
        		<version>1.3.3</version>
        		<scope>test</scope>
    		</dependency>

			<!-- Hibernate uses slf4j for logging, for our purposes here use the simple backend -->
    		<dependency>
       	 		<groupId>org.slf4j</groupId>
    			<artifactId>slf4j-simple</artifactId>
        		<version>1.5.11</version>
     		</dependency>
            
  			<dependency>
    			<groupId>org.hibernate</groupId>
        		<artifactId>hibernate-commons-annotations</artifactId>
        		<version>3.3.0.ga</version>
  			</dependency>
  			<dependency>
       			<groupId>org.hibernate</groupId>
       			<artifactId>hibernate-entitymanager</artifactId>
       			<version>3.3.2.GA</version>
   			</dependency>
   	  		<dependency>
  				<groupId>org.snmp4j</groupId>
  				<artifactId>snmp4j</artifactId>
  				<version>1.11.1</version>
  			</dependency>
 		</dependencies>
 	</dependencyManagement>
    
    <!-- add repositories for JTS and Hibernate Spatial and Hibernate (JBoss) -->
    <repositories>
        <repository>
            <id>OSGEO GeoTools repo</id>
            <url>http://download.osgeo.org/webdav/geotools</url>
        </repository>
        <repository>
            <id>Hibernate Spatial repo</id>
            <url>http://www.hibernatespatial.org/repository</url>
        </repository>
        <!-- add JBOSS repository for easy access to Hibernate libraries -->
        <repository>
            <id>JBOSS</id>
            <url>http://repository.jboss.com/maven2</url>
        </repository>
	<repository>
		<id>zk repository</id>
		<url>http://mavensync.zkoss.org/maven2</url>
	</repository>
	<repository>
		<id>SNMP4J repository</id>
		<url>https://server.oosnmp.net/dist/release/</url>
	</repository>
    </repositories>
    
     <build>

        <!-- =============================================================== -->
        <!-- Filtering -->
        <resources>

            <!--
                Apply filtering to files matching the following
                expressions in src/main/resources.
            -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>*-spring-config.xml</include>
                    <include>*-hibernate-config.xml</include>
                </includes>
            </resource>

            <!--
                Continue considering resources the files in
                src/main/resources, but without applying filtering.
            -->
            <resource>
                <directory>src/main/resources</directory>
            </resource>
             <!-- Filter Jetty configuration -->
            <resource>
                <directory>../src/main/jetty</directory>
                <includes>
                    <include>jetty-env.xml</include>
                </includes>
                <targetPath>../jetty</targetPath>
                <filtering>true</filtering>
            </resource>
        </resources>

        <testResources>

            <!--
                Apply filtering to files matching the following
                expressions in src/test/resources.
            -->
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>*-spring-config-test.xml</include>
                    <include>*-hibernate-config-test.xml</include>
                </includes>
            </testResource>

            <!--
                Continue considering resources the files in
                src/test/resources, but without applying filtering.
            -->
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>

        </testResources>


        <plugins>

            <!-- ========================================================== -->
            <!-- Compiler configuration -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <verbose>true</verbose>
                    <source>1.6</source>
                    <target>1.6</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

      

            <!-- ========================================================== -->
            <!-- Assembly configuration -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/assembly/src.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>
	    <!-- ========================================================== -->
            <!-- Jetty configuration -->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>6.1.18</version>

                <configuration>
                    <jettyEnvXml>target/jetty/jetty-env.xml</jettyEnvXml>
                    <!--
                    <webDefaultXml>
                        ../src/main/jetty/webdefault.xml
                    </webDefaultXml>
                    -->

                    <reload>manual</reload>

                    <!-- Log to the console. -->
                    <requestLog implementation="org.mortbay.jetty.NCSARequestLog">
                        <!-- This doesn't do anything for Jetty, but is a
                            workaround for a Maven bug that prevents the
                            requestLog from being set. -->
                        <append>true</append>
                    </requestLog>
                    <connectors>
                        <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                            <port>9090</port>
                        </connector>
                    </connectors>
                </configuration>

                <dependencies>
                    <dependency>
                        <groupId>${jdbcDriver.groupId}</groupId>
                        <artifactId>${jdbcDriver.artifactId}</artifactId>
                        <version>${jdbcDriver.version}</version>
                    </dependency>
                        <!-- the Postgis JDBC driver -->
    				<dependency>
        				<groupId>org.postgis</groupId>
    					<artifactId>postgis-jdbc</artifactId>
        				<version>1.3.3</version>
    				</dependency>
                </dependencies>
            </plugin>          
        </plugins>
    </build>    
</project>